(()=>{var e={};e.id=434,e.ids=[434],e.modules={3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},7462:(e,t,s)=>{"use strict";s.d(t,{A:()=>i});var r=s(56037),n=s.n(r);let a=process.env.MONGODB_URI;if(!a)throw Error("Please define the MONGODB_URI environment variable inside .env.local");let o=global.mongoose;o||(o=global.mongoose={conn:null,promise:null});let i=async function(){return o.conn||(o.promise||(o.promise=n().connect(a,{bufferCommands:!1}).then(e=>e)),o.conn=await o.promise),o.conn}},10654:(e,t,s)=>{"use strict";s.d(t,{A:()=>a});var r=s(56037);let n=new r.Schema({name:{type:String,required:!0},email:{type:String,required:!0},content:{type:String,required:!0},hasViewed:{type:Boolean,default:!1}},{timestamps:!0}),a=r.models.Message||(0,r.model)("Message",n)},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},56037:e=>{"use strict";e.exports=require("mongoose")},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},64420:(e,t,s)=>{"use strict";s.r(t),s.d(t,{patchFetch:()=>v,routeModule:()=>g,serverHooks:()=>w,workAsyncStorage:()=>x,workUnitAsyncStorage:()=>f});var r={};s.r(r),s.d(r,{DELETE:()=>m,GET:()=>d,POST:()=>c,PUT:()=>l});var n=s(96559),a=s(48088),o=s(37719),i=s(32190),u=s(7462),p=s(10654);async function d(){await (0,u.A)();let e=await p.A.find();return i.NextResponse.json(e)}async function c(e){await (0,u.A)();let{name:t,email:s,message:r,subject:n,...a}=await e.json();if(!t||!s||!r)return i.NextResponse.json({message:"Name, email, and message are required."},{status:400});let o=await p.A.create({name:t,email:s,content:r,...a});return i.NextResponse.json(o,{status:201})}async function l(e){await (0,u.A)();let{id:t,...s}=await e.json(),r=await p.A.findByIdAndUpdate(t,s,{new:!0});return r?i.NextResponse.json(r):i.NextResponse.json({message:"Message not found"},{status:404})}async function m(e){await (0,u.A)();let{id:t}=await e.json();return await p.A.findByIdAndDelete(t)?i.NextResponse.json({message:"Message deleted successfully"}):i.NextResponse.json({message:"Message not found"},{status:404})}let g=new n.AppRouteRouteModule({definition:{kind:a.RouteKind.APP_ROUTE,page:"/api/messages/route",pathname:"/api/messages",filename:"route",bundlePath:"app/api/messages/route"},resolvedPagePath:"C:\\Users\\stephanie\\Documents\\B550 MCP MERN\\WebPortfolio\\my-portfolio-client\\app\\api\\messages\\route.ts",nextConfigOutput:"",userland:r}),{workAsyncStorage:x,workUnitAsyncStorage:f,serverHooks:w}=g;function v(){return(0,o.patchFetch)({workAsyncStorage:x,workUnitAsyncStorage:f})}},78335:()=>{},96487:()=>{}};var t=require("../../../webpack-runtime.js");t.C(e);var s=e=>t(t.s=e),r=t.X(0,[447,580],()=>s(64420));module.exports=r})();